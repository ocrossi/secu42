looked like it was so simple buffer overflow,
1st param negative would overflow in main and
memcpy something really big
or we could learn how to do short jump to pass
the 4bytes pack containing eip adress and voila
could we modify shellcode like bosses?
operation short jump would work, we have to get eip
at last instruction, add size of instruction to short jump
+ padding

like EB 4 car eip se situe a la fin de jump

well finally by playing with input,
a very big negative int gives us bigger input size than the 36
max meant for prgm, we can segfault and redirect prgm exec but we shoul just overrride some variable on stack and we good

./bonus1 -2147483637 $(python -c "print 'A' * 40 + '\x46\x4c\x4f\x57'")

i was literally 50 ints from oneshotting this level
